.products {
  width: 80%;
  margin: 20px auto;
}

form.search {
  display: flex;
  justify-content: center;
  border: 1px solid #ccc;
  border-radius: 5px;
  padding: 12px 20px;

  input {
    margin-left: auto;
    padding: 12px 16px;
    border-radius: 5px;
    outline: none;

    &:hover {
      opacity: 0.7;
      cursor: pointer;
    }

    &.search {
      min-width: 300px;
      color: black;

      &[type="submit"] {
        min-width: 100px;
        margin-left: 10px;
        background-color: blue;
        color: white;
      }
    }
    &.insert {
      background-color: #4caf50;
      color: white;
    }
  }
}

form.products {
  fieldset {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    border: 1px solid #ccc;
    border-radius: 10px;
    padding: 10px 10px 25px 10px;
    min-width: 780px;

    legend {
      font-size: 1.3rem;
      text-align: center;
      font-weight: 500;
      color: #119e9e;
      padding: 0 30px;
    }
    div {
      width: 95%;
      display: flex;
      justify-content: center;
      padding: 6px;

      label,
      input {
        padding: 10px 16px;
        margin: 0 5px;
      }
      label {
        flex: 1;
        text-align: right;
        color: #712cf1;
        font-size: 16px;
        font-weight: 500;
        white-space: nowrap;
      }
      input {
        flex: 3;
        border: 1px solid #ccc;
        &:hover {
          background-color: #f2f2f2;
        }
        &:focus {
          border: 1px solid blue;
        }
      }
      &.btn_box {
        input {
          padding: 10px;
          border-radius: 10px;
          outline: none;
          border: none;
          color: white;
          &[value="저장"] {
            background-color: #712cf1;
          }
          &[value="새로작성"] {
            background-color: #ff9800;
          }
          &:hover {
            opacity: 0.7;
            cursor: pointer;
          }
        }
      }
    }
  }
}

div.img_box {
  /*
  calc() 
  4칙연산을 통하여 width 값을 설정하기
  CSS3 에서 calc() 함수를 사용하면 4칙연산식을 사용하여 값을 만들수 있다
  1. img_box 의 width 끝을 화면의 input box와 일치하고 싶다.
  2. 전체 div box 의 width 를 95% 로 설정하여 실제 크기가 얼마인지 알기 어렵다.
  3. 이 때 calc 함수를 사용하여 전체 div의 width 인 95% 에서 각각 padding 등의
  값 만큼 빼기 연산을 통하여 box의 width 를 계산하였다.
  */
  /*전체 크기는 95% 로, div padding 만큼 - 빼기*/
  max-width: calc(95% - 12px - 10px);
  border: 1px solid #ccc;
  position: relative;
  padding: 10px;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;

  img.img_add {
    transition: 0.7s;
    &:hover {
      opacity: 0.5;
      width: 120px;
      height: 120px;
      cursor: pointer;
    }
  }
  /*
  목표 : div.img_box 를 클릭하면 focus 가 지정되고, focus 가 지정된것을
  보여주고 싶다.
  1. div 는 focus 를 지정할수 없다.
    focus를 지정할수 있는 tag 는 input, button 등 몇몇으로 한정되어있다.
  2. div box 내부에 input tag 를 추가하고
    opacity 를 0으로 하여 투명하게 한다.
    position 을 absolute 로 설정하여 위치도 투명하게(다른 태그를 간섭하지 않게) 한다.
  3. JS 를 이용하여 div box 를 클릭하면 input tag 에 focus() 를 실행한다.
  4. div:focus-within 속성이 적용된다.
    div box 가 포함하는 input tag 등에 focus 가 설정되면
    자신이 focus를 받은 것 처럼 반응하게 한다.
  5. 22년 이후의 최신 브라우저만 적용된다.
  */
  &:focus-within {
    border: 1px solid blue;
    background-color: #f2f2f2;
  }
  input#img_focus {
    opacity: 0;
    position: absolute;
    bottom: 0;
    right: 0;
  }
}

input#p_image {
  display: none;
}
